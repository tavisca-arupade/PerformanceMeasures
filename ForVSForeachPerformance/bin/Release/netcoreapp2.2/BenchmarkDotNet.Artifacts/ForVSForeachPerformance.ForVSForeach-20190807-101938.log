// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 2 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in C:\Users\arupade\source\repos\PerformanceAssignment\ForVSForeachPerformance\bin\Release\netcoreapp2.2\e884ea41-c5f8-4fef-ac83-9f60b7f6ca60
// command took 2.76s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in C:\Users\arupade\source\repos\PerformanceAssignment\ForVSForeachPerformance\bin\Release\netcoreapp2.2\e884ea41-c5f8-4fef-ac83-9f60b7f6ca60
// command took 3.92s and exited with 0
// ***** Done, took 00:00:07 (7.02 sec)   *****
// Found 2 benchmarks:
//   ForVSForeach.TestForLoop: DefaultJob
//   ForVSForeach.TestForEachLoop: DefaultJob

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: ForVSForeach.TestForLoop: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "e884ea41-c5f8-4fef-ac83-9f60b7f6ca60.dll" --benchmarkName "ForVSForeachPerformance.ForVSForeach.TestForLoop" --job "Default" --benchmarkId 0 in C:\Users\arupade\source\repos\PerformanceAssignment\ForVSForeachPerformance\bin\Release\netcoreapp2.2\e884ea41-c5f8-4fef-ac83-9f60b7f6ca60\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.6 (CoreCLR 4.6.27817.03, CoreFX 4.6.27818.02), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 573630.57 ns, 573.6306 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
   at ForVSForeachPerformance.ForVSForeach.TestForLoop() in C:\Users\arupade\source\repos\PerformanceAssignment\ForVSForeachPerformance\Program.cs:line 26
   at BenchmarkDotNet.Autogenerated.Runnable_0.WorkloadActionNoUnroll(Int64 invokeCount) in C:\Users\arupade\source\repos\PerformanceAssignment\ForVSForeachPerformance\bin\Release\netcoreapp2.2\e884ea41-c5f8-4fef-ac83-9f60b7f6ca60\e884ea41-c5f8-4fef-ac83-9f60b7f6ca60.notcs:line 747
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_0.Run(IHost host, String benchmarkName) in C:\Users\arupade\source\repos\PerformanceAssignment\ForVSForeachPerformance\bin\Release\netcoreapp2.2\e884ea41-c5f8-4fef-ac83-9f60b7f6ca60\e884ea41-c5f8-4fef-ac83-9f60b7f6ca60.notcs:line 164
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in C:\Users\arupade\source\repos\PerformanceAssignment\ForVSForeachPerformance\bin\Release\netcoreapp2.2\e884ea41-c5f8-4fef-ac83-9f60b7f6ca60\e884ea41-c5f8-4fef-ac83-9f60b7f6ca60.notcs:line 49
// AfterAll
ExitCode != 0
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// **************************
// Benchmark: ForVSForeach.TestForEachLoop: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "e884ea41-c5f8-4fef-ac83-9f60b7f6ca60.dll" --benchmarkName "ForVSForeachPerformance.ForVSForeach.TestForEachLoop" --job "Default" --benchmarkId 1 in C:\Users\arupade\source\repos\PerformanceAssignment\ForVSForeachPerformance\bin\Release\netcoreapp2.2\e884ea41-c5f8-4fef-ac83-9f60b7f6ca60\bin\Release\netcoreapp2.2
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.2.6 (CoreCLR 4.6.27817.03, CoreFX 4.6.27818.02), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 608639.18 ns, 608.6392 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
   at ForVSForeachPerformance.ForVSForeach.TestForEachLoop() in C:\Users\arupade\source\repos\PerformanceAssignment\ForVSForeachPerformance\Program.cs:line 39
   at BenchmarkDotNet.Autogenerated.Runnable_1.WorkloadActionNoUnroll(Int64 invokeCount) in C:\Users\arupade\source\repos\PerformanceAssignment\ForVSForeachPerformance\bin\Release\netcoreapp2.2\e884ea41-c5f8-4fef-ac83-9f60b7f6ca60\e884ea41-c5f8-4fef-ac83-9f60b7f6ca60.notcs:line 1391
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_1.Run(IHost host, String benchmarkName) in C:\Users\arupade\source\repos\PerformanceAssignment\ForVSForeachPerformance\bin\Release\netcoreapp2.2\e884ea41-c5f8-4fef-ac83-9f60b7f6ca60\e884ea41-c5f8-4fef-ac83-9f60b7f6ca60.notcs:line 808
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in C:\Users\arupade\source\repos\PerformanceAssignment\ForVSForeachPerformance\bin\Release\netcoreapp2.2\e884ea41-c5f8-4fef-ac83-9f60b7f6ca60\e884ea41-c5f8-4fef-ac83-9f60b7f6ca60.notcs:line 49
// AfterAll
ExitCode != 0
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


Successfully reverted power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\ForVSForeachPerformance.ForVSForeach-report.csv
  BenchmarkDotNet.Artifacts\results\ForVSForeachPerformance.ForVSForeach-report-github.md
  BenchmarkDotNet.Artifacts\results\ForVSForeachPerformance.ForVSForeach-report.html

// * Detailed results *
ForVSForeach.TestForLoop: DefaultJob
Runtime = ; GC = 
There are not any results runs

ForVSForeach.TestForEachLoop: DefaultJob
Runtime = ; GC = 
There are not any results runs

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.17134.885 (1803/April2018Update/Redstone4)
Intel Core i7-6600U CPU 2.60GHz (Skylake), 1 CPU, 4 logical and 2 physical cores
Frequency=2742183 Hz, Resolution=364.6730 ns, Timer=TSC
.NET Core SDK=2.2.401
  [Host] : .NET Core 2.2.6 (CoreCLR 4.6.27817.03, CoreFX 4.6.27818.02), 64bit RyuJIT  [AttachedDebugger]


|          Method | Mean | Error |
|---------------- |-----:|------:|
|     TestForLoop |   NA |    NA |
| TestForEachLoop |   NA |    NA |

Benchmarks with issues:
  ForVSForeach.TestForLoop: DefaultJob
  ForVSForeach.TestForEachLoop: DefaultJob

// * Warnings *
Environment
  Summary -> Benchmark was executed with attached debugger
  Summary -> Detected error exit code from one of the benchmarks. It might be caused by following antivirus software:
        - McAfee Endpoint Security (C:\Program Files (x86)\McAfee\Endpoint Security\Threat Prevention\AMCFG.EXE)
        - Windows Defender (windowsdefender://)
Use InProcessToolchain to avoid new process creation.


// * Legends *
  Mean  : Arithmetic mean of all measurements
  Error : Half of 99.9% confidence interval
  1 ns  : 1 Nanosecond (0.000000001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:02 (2.48 sec), executed benchmarks: 2

Global total time: 00:00:09 (9.51 sec), executed benchmarks: 2
// * Artifacts cleanup *
